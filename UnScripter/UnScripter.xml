<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnScripter</name>
    </assembly>
    <members>
        <member name="T:DictionaryFind">
            <summary>
            Finds a value by key in the dictionary, or returns the default value for 
            TValue. Just like Linq FirstOrDefault().
            </summary>
            <nuget id="netfx-System.Collections.Generic.DictionaryFind" />
        </member>
        <member name="M:DictionaryFind.Find``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Finds a value by key in the dictionary, or returns the default value for 
            TValue. Just like Linq FirstOrDefault().
            </summary>
            <param name="dictionary" this="true">The object this extension method applies to.</param>
            <param name="key">The key of the value to find.</param>
        </member>
        <member name="T:Guard">
            <summary>
            Common guard class for argument validation.
            </summary>
            <nuget id="netfx-Guard" />
        </member>
        <member name="M:Guard.NotNull``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Ensures the given <paramref name="value"/> is not null.
            Throws <see cref="T:System.ArgumentNullException"/> otherwise.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Guard.NotNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given string <paramref name="value"/> is not null or empty.
            Throws <see cref="T:System.ArgumentNullException"/> in the first case, or 
            <see cref="T:System.ArgumentException"/> in the latter.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="value"/> is null or an empty string.</exception>
        </member>
        <member name="M:Guard.IsValid``1(System.Linq.Expressions.Expression{System.Func{``0}},``0,System.Func{``0,System.Boolean},System.String)">
            <summary>
            Ensures the given string <paramref name="value"/> is valid according 
            to the <paramref name="validate"/> function. Throws <see cref="T:System.ArgumentNullException"/> 
            otherwise.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="value"/> is not valid according 
            to the <paramref name="validate"/> function.</exception>
        </member>
        <member name="M:Guard.IsValid``1(System.Linq.Expressions.Expression{System.Func{``0}},``0,System.Func{``0,System.Boolean},System.String,System.Object[])">
            <summary>
            Ensures the given string <paramref name="value"/> is valid according 
            to the <paramref name="validate"/> function. Throws <see cref="T:System.ArgumentNullException"/> 
            otherwise.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="value"/> is not valid according 
            to the <paramref name="validate"/> function.</exception>
        </member>
        <member name="T:System.Reactive.EventPattern">
            <summary>
            Factory class for <see cref="T:System.Reactive.IEventPattern`1"/>.
            </summary>
            <nuget id="netfx-System.Reactive.EventStream.Interfaces"/>
        </member>
        <member name="M:System.Reactive.EventPattern.Create``1(System.Object,``0)">
            <summary>
            Creates an event pattern instance for the given sender and event argument value.
            </summary>
        </member>
        <member name="T:System.Reactive.IEventPattern`1">
            <summary>
            Represents the Sender and EventArg values of a .NET event.
            </summary>
            <remarks>
            Exposes a very similar API to Rx <c>EventPattern&lt;TEventArgs&gt;</c> 
            but in a covariant-capable interface, so that subscribers can still 
            subscribe to the pattern but with a more generic base type or 
            interface implemented by the <typeparamref name="TEvent"/>. 
            It also removes the restriction that the argument value has to 
            derive from <see cref="P:System.Reactive.IEventPattern`1.EventArgs"/>.
            </remarks>
            <nuget id="netfx-System.Reactive.EventStream.Interfaces"/>
        </member>
        <member name="P:System.Reactive.IEventPattern`1.EventArgs">
            <summary>
            Gets the event arguments value of the event.
            </summary>
        </member>
        <member name="P:System.Reactive.IEventPattern`1.Sender">
            <summary>
            Gets the sender value of the event.
            </summary>
        </member>
        <member name="T:System.Reactive.EventStream">
            <summary>
            Provides the implementation for a reactive extensions event stream, 
            allowing trending and analysis queries to be performed in real-time 
            over the events pushed through the stream.
            </summary>
            <nuget id="netfx-System.Reactive.EventStream.Implementation"/>
            <remarks>
            The <see cref="T:System.Reactive.IEventStream"/> interface implemented by this class is 
            provided by the nuget <c>netfx-System.Reactive.EventStream.Interfaces</c>, 
            which must be installed in the same project or one referenced by it. 
            </remarks>
            <devdoc>
            The surprisingly simple implementation from the blog post http://kzu.to/srVn3P 
            was surprisingly limiting too :). No support for covariant subscriptions, 
            subscriptions to interfaces implemented by the concrete events, etc. 
            (i.e. the EventPattern&lt;TEventArgs&gt; from Rx wouldn't work).
            </devdoc>
            <nuget id="netfx-System.Reactive.EventStream"/>
        </member>
        <member name="T:System.Reactive.IEventStream">
            <summary>
            Provides an observable stream of events that 
            can be used for analysis or real-time handling.
            </summary>
            <remarks>
            Leveraging the Reactive Extensions (Rx), it's 
            possible to build fairly complicated event reaction 
            chains by simply issuing Linq-style queries over 
            the event stream. This is incredibly powerfull, 
            as explained in http://kzu.to/srVn3P. 
            <para>
            The stream supports two types of events: arbitrary 
            event payloads (not even restricted to inherit from 
            <see cref="T:System.EventArgs"/> as is usual in .NET) or 
            <see cref="T:System.Reactive.IEventPattern`1"/>, which is an interface
            similar to the concrete implementation found on Rx. 
            The advantage of pushing the event pattern version is 
            that subscribers can perform additional filtering 
            if needed depending on the event sender. 
            </para>
            <para>
            See also <seealso cref="M:System.Reactive.IEventStreamExtensions.Push``1(System.Reactive.IEventStream,System.Object,``0)"/>.
            </para>
            </remarks>
            <nuget id="netfx-System.Reactive.EventStream.Interfaces"/>
        </member>
        <member name="M:System.Reactive.IEventStream.Push``1(``0)">
            <summary>
            Pushes an event to the stream, causing any 
            subscriber to be invoked if appropriate.
            </summary>
        </member>
        <member name="M:System.Reactive.IEventStream.Push``1(System.Reactive.IEventPattern{``0})">
            <summary>
            Pushes an event to the stream with its 
            sender information, causing any subscriber 
            to be invoked if appropriate.
            </summary>
        </member>
        <member name="M:System.Reactive.IEventStream.Of``1">
            <summary>
            Observes the events of a given type.
            </summary>
        </member>
        <member name="M:System.Reactive.EventStream.Push``1(``0)">
            <summary>
            Pushes an event to the stream, causing any  
            subscriber to be invoked if appropriate.
            </summary>
            <remarks>
            This overload will not invoke subscribers for the 
            same <typeparamref name="TEvent"/> but as an 
            <see cref="T:System.Reactive.IEventPattern`1"/>, because no 
            sender information is provided and therefore 
            is not available.
            </remarks>
        </member>
        <member name="M:System.Reactive.EventStream.Push``1(System.Reactive.IEventPattern{``0})">
            <summary>
            Pushes an event to the stream, causing any  
            subscriber to be invoked if appropriate, including 
            subscribers for just <typeparamref name="TEvent"/> 
            and not only <see cref="T:System.Reactive.IEventPattern`1"/>.
            </summary>
        </member>
        <member name="M:System.Reactive.EventStream.Of``1">
            <summary>
            Observes the events of a given type.
            </summary>
        </member>
        <member name="T:System.Reactive.IEventStreamExtensions">
            <summary>
            Provides usability overloads to <see cref="T:System.Reactive.IEventStream"/>.
            </summary>
        </member>
        <member name="M:System.Reactive.IEventStreamExtensions.Push``1(System.Reactive.IEventStream,System.Object,``0)">
            <summary>
            Pushes the given event with the sender information in the 
            form of an <see cref="T:System.Reactive.IEventPattern`1"/>.
            </summary>
            <typeparam name="TEvent">The type of the event, typically inferred from the passed-in argument.</typeparam>
            <param name="stream">The event stream to push to.</param>
            <param name="sender">The sender of the event.</param>
            <param name="event">The event data.</param>
        </member>
        <member name="T:UnScripter.Plugin.PluginContainer">
            <summary>
            Flywheel between PluginLoader and 
            </summary>
        </member>
        <member name="P:UnScripter.Project.UnScripterProject.FileTreeView">
            <summary>
            Winforms TreeView for the Project Explorer
            </summary>
        </member>
        <member name="P:UnScripter.Project.UnScripterProject.Saved">
            <summary>
            Is the project saved?
            </summary>
        </member>
        <member name="P:UnScripter.Project.UnScripterProject.FileList">
            <summary>
            Simple list of each file in the project
            </summary>
        </member>
        <member name="P:UnScripter.Project.UnScripterProject.ProjectName">
            <summary>
            Name of the Project
            </summary>
        </member>
        <member name="P:UnScripter.Project.UnScripterProject.ProjectFolder">
            <summary>
            Root folder of the Project (UDK Directory)
            </summary>
        </member>
        <member name="P:UnScripter.Project.UnScripterProject.DevelopmentFolder">
            <summary>
            Folder containing actual Source Code (UnrealScript)
            </summary>
        </member>
        <member name="M:UnScripter.MainForm.StartParser">
            <summary>
            TODO: Move elsewhere
            </summary>
        </member>
        <member name="F:UnScripter.MainForm.docks">
            <summary>
            TODO: Move
            </summary>
        </member>
        <member name="T:UnScripter.OptionPage">
            <summary>
            Default page for adding to the options dialog
            </summary>
        </member>
        <member name="T:UnScripter.Plugin.PluginLoader">
            <summary>
            Central plugin loader. Loads external assemblies from specified plugin directory
            </summary>
        </member>
        <member name="M:UnScripter.Plugin.PluginLoader.ListPlugins">
            <summary>
            Load and list all plugins that UnScripter has access to
            </summary>
            <returns></returns>
        </member>
        <member name="M:UnScripter.Plugin.PluginLoader.ListPlugins(UnScripterPlugin.Project.UsProject)">
            <summary>
            List all the plugins that a specific project utilizes
            </summary>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="T:UnScripter.ProjectFileContextMenu">
            <summary>
            Context menu to open up on right click of a file or folder in the project explorer
            </summary>
        </member>
        <member name="T:UnScripter.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources._1rightarrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.application_exit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.bookmark_folder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.compfile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.document_preview">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.document_print">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.document_save">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.edit_delete_shred">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.edit_redo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.edit_select_all">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.edit_undo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.editcopy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.editcut">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.editpaste">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.filenew">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.fileopen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.filesaveas1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.find">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.folder_blue">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.folder_html">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.folder_new">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.games_config_options">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.help_about">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.mail_mark_important">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.project_open">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.rebuild">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.run_build">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.run1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.save_all">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.text_block">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.utilities_terminal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.utilities_terminal1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.window_close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:UnScripter.Properties.Resources.world">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
